{"ast":null,"code":"import { renderSlot as _renderSlot, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 2\n};\nconst _hoisted_4 = {\n  key: 3\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  return _ctx.tagName === 'button' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n    type: _ctx.type\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\", {}, () => [_createTextVNode(\"Default\")])]),\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"type\"])])) : _ctx.tagName === 'input' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n    class: \"w-50 m-2\",\n    placeholder: \"Please input\",\n    clearable: \"\"\n  })])) : _ctx.tagName === 'tag' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_tag, {\n    type: _ctx.type\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\", {}, () => [_createTextVNode(\"Default\")])]),\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"type\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"组件范围仅限于 Button、Input、Tag\"));\n}","map":{"version":3,"names":["_ctx","tagName","_createElementBlock","_hoisted_1","_createVNode","_component_el_button","type","_renderSlot","$slots","_hoisted_2","_component_el_input","class","placeholder","clearable","_hoisted_3","_component_el_tag","_hoisted_4"],"sources":["L:\\frontendCore\\vue\\elementUI\\elementuitest\\src\\components\\ElementCommonComp.vue"],"sourcesContent":["<!-- \r\n    提供一个可以渲染Vue Element UI 的通用组件ElementCommonComp\r\n\r\n    要求：\r\n    基于Vue Element UI组件库，版本无限制。\r\n    通用组件覆盖组件范围：Button、Input、Tag 组件, 需要考虑相应组件的props、events和slots。\r\n    交付内容需要包括ElementCommonComp 组件的源码以及验证功能的链接(CodePen等)或源码\r\n -->\r\n\r\n<!-- \r\n    组件范围：Button、Input、Tag\r\n    props\r\n        size\r\n        type\r\n        text\r\n    events\r\n        click\r\n        change\r\n        - blur\r\n        - focus\r\n        - input\r\n        - clear\r\n        - close\r\n    slots\r\n        default\r\n        loading\r\n        icon\r\n        - prefix\r\n        - suffix\r\n        - prepend\r\n        - append\r\n  -->\r\n<template>\r\n  <div v-if=\"tagName === 'button'\">\r\n    <el-button :type=\"type\" ><slot>Default</slot></el-button>\r\n  </div>\r\n  <div v-else-if=\"tagName === 'input'\">\r\n    <el-input class=\"w-50 m-2\" placeholder=\"Please input\" clearable />\r\n </div>\r\n  <div v-else-if=\"tagName === 'tag'\">\r\n    <el-tag :type=\"type\"><slot>Default</slot></el-tag>\r\n</div>\r\n  <div v-else>组件范围仅限于 Button、Input、Tag</div>\r\n</template>\r\n<script>\r\nimport { defineComponent } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"ElementCommonComp\",\r\n  props: [\"name\", \"type\"],\r\n  setup(props) {\r\n    return {\r\n      tagName: props.name.toString().toLowerCase(),\r\n      type: props.type\r\n    };\r\n  },\r\n});\r\n</script>\r\n"],"mappings":";;;;;;;;;;;;;;;;;SAiCaA,IAAA,CAAAC,OAAO,iB,cAAlBC,mBAAA,CAEM,OAAAC,UAAA,GADJC,YAAA,CAAyDC,oBAAA;IAA7CC,IAAI,EAAEN,IAAA,CAAAM;EAAI;sBAAG,MAAoB,CAApBC,WAAA,CAAoBP,IAAA,CAAAQ,MAAA,iBAApB,MAAoB,C,iBAAd,SAAO,E;;mCAExBR,IAAA,CAAAC,OAAO,gB,cAAvBC,mBAAA,CAEK,OAAAO,UAAA,GADHL,YAAA,CAAkEM,mBAAA;IAAxDC,KAAK,EAAC,UAAU;IAACC,WAAW,EAAC,cAAc;IAACC,SAAS,EAAT;UAExCb,IAAA,CAAAC,OAAO,c,cAAvBC,mBAAA,CAEI,OAAAY,UAAA,GADFV,YAAA,CAAkDW,iBAAA;IAAzCT,IAAI,EAAEN,IAAA,CAAAM;EAAI;sBAAE,MAAoB,CAApBC,WAAA,CAAoBP,IAAA,CAAAQ,MAAA,iBAApB,MAAoB,C,iBAAd,SAAO,E;;kDAEpCN,mBAAA,CAA0C,OAAAc,UAAA,EAA9B,0BAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}
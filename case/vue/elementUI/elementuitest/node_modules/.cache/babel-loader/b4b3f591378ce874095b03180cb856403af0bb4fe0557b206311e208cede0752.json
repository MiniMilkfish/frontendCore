{"ast":null,"code":"import { renderSlot as _renderSlot, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = {\n  key: 2\n};\nconst _hoisted_4 = {\n  key: 3\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  return _ctx.tagName === 'button' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n    type: _ctx.type,\n    onClick: _ctx.handleClick\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\", {}, () => [_createTextVNode(_toDisplayString(_ctx.plain || \"Default\"), 1 /* TEXT */)])]),\n\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"type\", \"onClick\"])])) : _ctx.tagName === 'input' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_el_input, {\n    class: \"w-50 m-2\",\n    placeholder: `${_ctx.plain || 'Please input'}`,\n    clearable: \"\",\n    value: _ctx.value,\n    onInput: _ctx.handleinput\n  }, null, 8 /* PROPS */, [\"placeholder\", \"value\", \"onInput\"])])) : _ctx.tagName === 'tag' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_el_tag, {\n    type: _ctx.type\n  }, {\n    default: _withCtx(() => [_renderSlot(_ctx.$slots, \"default\", {}, () => [_createTextVNode(_toDisplayString(_ctx.plain || \"Default\"), 1 /* TEXT */)])]),\n\n    _: 3 /* FORWARDED */\n  }, 8 /* PROPS */, [\"type\"])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"组件范围仅限于 Button、Input、Tag\"));\n}","map":{"version":3,"names":["_ctx","tagName","_createElementBlock","_hoisted_1","_createVNode","_component_el_button","type","onClick","handleClick","_renderSlot","$slots","plain","_hoisted_2","_component_el_input","class","placeholder","clearable","value","onInput","handleinput","_hoisted_3","_component_el_tag","_hoisted_4"],"sources":["L:\\frontendCore\\vue\\elementUI\\elementuitest\\src\\components\\ElementCommonComp.vue"],"sourcesContent":["<!-- \r\n    提供一个可以渲染Vue Element UI 的通用组件ElementCommonComp\r\n\r\n    要求：\r\n    基于Vue Element UI组件库，版本无限制。\r\n    通用组件覆盖组件范围：Button、Input、Tag 组件, 需要考虑相应组件的props、events和slots。\r\n    交付内容需要包括ElementCommonComp 组件的源码以及验证功能的链接(CodePen等)或源码\r\n -->\r\n\r\n<!-- \r\n    组件范围：Button、Input、Tag\r\n    props\r\n        type\r\n        plain\r\n        text\r\n    events\r\n        click\r\n        - change\r\n    slots\r\n        default\r\n  -->\r\n<template>\r\n  <div v-if=\"tagName === 'button'\">\r\n    <el-button :type=\"type\" @click=\"handleClick\"><slot>{{plain || \"Default\"}} </slot></el-button>\r\n  </div>\r\n  <div v-else-if=\"tagName === 'input'\">\r\n    <el-input class=\"w-50 m-2\" :placeholder=\"`${plain || 'Please input'}`\" clearable :value=\"value\" @input=\"handleinput\"/>\r\n </div>\r\n  <div v-else-if=\"tagName === 'tag'\">\r\n    <el-tag :type=\"type\"><slot>{{plain || \"Default\"}} </slot></el-tag>\r\n</div>\r\n  <div v-else>组件范围仅限于 Button、Input、Tag</div>\r\n</template>\r\n<script>\r\nimport { defineComponent, ref } from \"vue\";\r\n\r\nexport default defineComponent({\r\n  name: \"ElementCommonComp\",\r\n  props: [\"name\", \"type\", \"plain\", \"value\"],\r\n  setup(props) {\r\n    return {\r\n      tagName: props.name.toString().toLowerCase(),\r\n      type: props.type || null,\r\n      plain: props.plain  || null,\r\n      value: ref(props.value || null)\r\n    };\r\n  },\r\n  methods: {\r\n    handleClick(){\r\n        this.$emit('click');\r\n    },\r\n    handleInput(){\r\n        console.log(this.value, event.target.value )\r\n        this.$emit(\"input\", event.target.value);\r\n    },\r\n    handleClear(){\r\n        this.$emit(\"input\", \"\")\r\n    }\r\n  }\r\n});\r\n</script>\r\n"],"mappings":";;;;;;;;;;;;;;;;;SAsBaA,IAAA,CAAAC,OAAO,iB,cAAlBC,mBAAA,CAEM,OAAAC,UAAA,GADJC,YAAA,CAA6FC,oBAAA;IAAjFC,IAAI,EAAEN,IAAA,CAAAM,IAAI;IAAGC,OAAK,EAAEP,IAAA,CAAAQ;;sBAAa,MAAoC,CAApCC,WAAA,CAAoCT,IAAA,CAAAU,MAAA,iBAApC,MAAoC,C,kCAA5BV,IAAA,CAAAW,KAAK,8B;;;8CAE5CX,IAAA,CAAAC,OAAO,gB,cAAvBC,mBAAA,CAEK,OAAAU,UAAA,GADHR,YAAA,CAAsHS,mBAAA;IAA5GC,KAAK,EAAC,UAAU;IAAEC,WAAW,KAAKf,IAAA,CAAAW,KAAK;IAAsBK,SAAS,EAAT,EAAS;IAAEC,KAAK,EAAEjB,IAAA,CAAAiB,KAAK;IAAGC,OAAK,EAAElB,IAAA,CAAAmB;oEAE1FnB,IAAA,CAAAC,OAAO,c,cAAvBC,mBAAA,CAEI,OAAAkB,UAAA,GADFhB,YAAA,CAAkEiB,iBAAA;IAAzDf,IAAI,EAAEN,IAAA,CAAAM;EAAI;sBAAE,MAAoC,CAApCG,WAAA,CAAoCT,IAAA,CAAAU,MAAA,iBAApC,MAAoC,C,kCAA5BV,IAAA,CAAAW,KAAK,8B;;;kDAEpCT,mBAAA,CAA0C,OAAAoB,UAAA,EAA9B,0BAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}